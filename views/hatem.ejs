<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/hatem.css">
    <link rel="stylesheet" href="/css/header.css">
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Montserrat:wght@400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11" defer></script>
    <title>Shopping Cart - Coffee House</title>
    <style>
        /* ... existing styles ... */
        
        .button-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 20px;
            margin-top: 30px;
        }

        .cart-button {
            background-color: saddlebrown;
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 15px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
        }

        .cart-button:hover {
            background-color: brown;
        }

        /* Edit Mode Header Indicator */
        .edit-mode-indicator {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            background-color: #6F4E37;
            color: white;
            text-align: center;
            padding: 10px;
            z-index: 1000;
            font-weight: 500;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .edit-mode-indicator i {
            margin-right: 8px;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }

        /* Adjust main content when indicator is visible */
        body.edit-mode-active {
            padding-top: 50px;
        }

        body.edit-mode-active .main-content {
            margin-top: 50px;
        }
    </style>
    <!-- Preload critical assets -->
    <link rel="preload" href="/css/hatem.css" as="style">
    <link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" as="style">
    <!-- Pass API URL from server -->
    <script>
        window.API_BASE_URL = '<%= process.env.API_URL || "http://localhost:5000/api" %>';
    </script>
</head>
<body>
    <!-- Edit Mode Indicator -->
    <div class="edit-mode-indicator" id="editModeIndicator">
        <i class="fas fa-edit"></i> Edit Mode Active - Order #<span id="editOrderNumber"></span>
    </div>

    <%- include('partials/header') %>

    <main class="cart-container">
        <h1>Your Cart</h1>
        
        <% if (cart && cart.items && cart.items.length > 0) { %>
            <div class="cart-content">
                <table class="cart-table">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Item</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <th>Total</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="cart-items">
                        <% cart.items.forEach((item, index) => { %>
                            <tr>
                                <td><%= index + 1 %></td>
                                <td>
                                    <div class="item-info">
                                        <% 
                                            const imageName = item.name.toLowerCase()
                                                .replace(/\s+/g, '-')
                                                .replace(/[^a-z0-9-]/g, '');
                                        %>
                                        <img src="/images/project-images/<%= imageName %>.jpg" 
                                             onerror="this.onerror=null; this.src='/images/project-images/coffee.jpeg';" 
                                             alt="<%= item.name %>" 
                                             loading="lazy">
                                        <span><%= item.name %></span>
                                    </div>
                                </td>
                                <td>LE <%= item.price.toFixed(2) %></td>
                                <td>
                                    <div class="quantity-controls">
                                        <button class="decrement-btn" data-product-id="<%= item.productId %>">-</button>
                                        <span><%= item.quantity %></span>
                                        <button class="increment-btn" data-product-id="<%= item.productId %>">+</button>
                                    </div>
                                </td>
                                <td>LE <%= (item.price * item.quantity).toFixed(2) %></td>
                                <td>
                                    <button class="remove-btn" data-product-id="<%= item.productId %>">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>

                <div class="cart-summary">
                    <div class="summary-row">
                        <span>Subtotal:</span>
                        <span id="subtotal">LE <%= cart.subtotal.toFixed(2) %></span>
                    </div>
                    
                    <!-- Add Promo Code Section -->
                    <div class="promo-code-section">
                        <div class="promo-input-group">
                            <input type="text" id="promo-code" placeholder="Enter promo code" maxlength="10">
                            <button id="apply-promo" class="promo-btn">Apply</button>
                        </div>
                        <div id="promo-message" class="promo-message"></div>
                    </div>

                    <% if (cart.discount > 0) { %>
                        <div class="summary-row discount">
                            <span>Discount:</span>
                            <span>-LE <%= cart.discount.toFixed(2) %></span>
                        </div>
                    <% } %>
                    <div class="summary-row total">
                        <span>Total:</span>
                        <span id="grand-total">LE <%= cart.total.toFixed(2) %></span>
                    </div>
                </div>

                <div class="cart-actions">
                    <button id="continue-btn" class="btn secondary">Continue Shopping</button>
                    <button id="checkout-btn" class="btn primary">Proceed to Checkout</button>
                </div>
            </div>
        <% } else { %>
            <div class="empty-cart">
                <i class="fas fa-shopping-cart"></i>
                <h2>Your cart is empty</h2>
                <p>Looks like you haven't added any items to your cart yet.</p>
                <button id="browse-menu-btn" class="btn primary">Browse Menu</button>
            </div>
        <% } %>
    </main>

    <%- include('partials/footer') %>

    <script>
        window.API_BASE_URL = '<%= process.env.API_URL || "http://localhost:5000/api" %>';
        
        // Fetch data with authentication
        async function fetchData(url, options = {}) {
            const defaultOptions = {
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/json'
                }
            };

            try {
                const response = await fetch(url, { ...defaultOptions, ...options });
                if (!response.ok) {
                    if (response.status === 401) {
                        // Handle unauthorized access
                        Swal.fire({
                            icon: 'error',
                            title: 'Session Expired',
                            text: 'Please log in again to continue'
                        }).then(() => {
                            window.location.href = '/login';
                        });
                        return null;
                    }
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return await response.json();
            } catch (error) {
                console.error('Error fetching data:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to fetch data. Please try again.'
                });
                throw error;
            }
        }

        // Initialize Cart object
        const Cart = {
            async applyPromoCode(promoCode) {
                try {
                    console.log('Applying promo code:', promoCode);
                    const response = await fetchData(`${API_BASE_URL}/cart/promo`, {
                        method: 'POST',
                        body: JSON.stringify({ promoCode })
                    });

                    if (response) {
                        console.log('Promo code response:', response);
                        // Update the display with new totals
                        const cartData = await this.getCart();
                        if (cartData) {
                            updateCartDisplay(cartData);
                        }

                        // Show success message
                        const messageElement = document.getElementById('promo-message');
                        if (messageElement) {
                            messageElement.textContent = 'Promo code applied successfully!';
                            messageElement.className = 'promo-message success';
                        }

                        // Clear input
                        const promoInput = document.getElementById('promo-code');
                        if (promoInput) {
                            promoInput.value = '';
                        }
                    }
                } catch (error) {
                    console.error('Error applying promo code:', error);
                    // Show error message
                    const messageElement = document.getElementById('promo-message');
                    if (messageElement) {
                        let errorMessage = error.response?.data?.message || 'Failed to apply promo code';
                        
                        // Add additional context for specific errors
                        if (error.response?.data?.usedAt) {
                            const usedAt = new Date(error.response.data.usedAt);
                            errorMessage += ` (Used on ${usedAt.toLocaleDateString()})`;
                        } else if (error.response?.data?.currentCode) {
                            errorMessage += ` (Current code: ${error.response.data.currentCode})`;
                        }
                        
                        messageElement.textContent = errorMessage;
                        messageElement.className = 'promo-message error';
                    }
                }
            },

            async getCart() {
                try {
                    return await fetchData(`${API_BASE_URL}/cart`);
                } catch (error) {
                    console.error('Error getting cart:', error);
                    return null;
                }
            }
        };

        // Make Cart object available globally
        window.Cart = Cart;

        // Helper function to update cart display
        function updateCartDisplay(cartData) {
            const subtotalElement = document.getElementById('subtotal');
            const grandTotalElement = document.getElementById('grand-total');
            
            if (subtotalElement) {
                subtotalElement.textContent = `LE ${cartData.subtotal.toFixed(2)}`;
            }
            
            if (grandTotalElement) {
                grandTotalElement.textContent = `LE ${cartData.total.toFixed(2)}`;
            }
        }

        // Initialize promo code functionality
        function initializePromoCode() {
            console.log('Initializing promo code functionality');
            
            // Add promo code event listener
            const applyPromoBtn = document.getElementById('apply-promo');
            if (applyPromoBtn) {
                console.log('Adding promo code button listener');
                applyPromoBtn.addEventListener('click', async () => {
                    const promoInput = document.getElementById('promo-code');
                    if (promoInput && promoInput.value.trim()) {
                        await Cart.applyPromoCode(promoInput.value.trim());
                    }
                });
            }

            // Add enter key support for promo code
            const promoInput = document.getElementById('promo-code');
            if (promoInput) {
                console.log('Adding promo code input listener');
                promoInput.addEventListener('keypress', async (e) => {
                    if (e.key === 'Enter' && promoInput.value.trim()) {
                        e.preventDefault();
                        await Cart.applyPromoCode(promoInput.value.trim());
                    }
                });
            }
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', async () => {
            console.log('DOM Content Loaded');
            
            // Check authentication
            const user = await fetchData(`${API_BASE_URL}/users/verify`);
            if (!user) return;

            // Load cart
            const cartData = await fetchData(`${API_BASE_URL}/cart`);
            if (cartData) {
                updateCartDisplay(cartData);
            }

            // Initialize promo code functionality
            initializePromoCode();
        });
    </script>

    <script src="/js/hatem.js"></script>
</body>
</html>
