<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Coffee House - Menu</title>
    <link rel="stylesheet" href="/css/boudz.css">
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Montserrat:wght@400;600&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    <div class="menu-toggle" id="menuToggle">
        <i class="fas fa-bars"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-layout-text-sidebar" viewBox="0 0 16 16">
            <path d="M3.5 3a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1zm0 3a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1zM3 9.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m.5 2.5a.5.5 0 0 0 0 1h5a.5.5 0 0 0 0-1z"/>
            <path d="M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm12-1v14h2a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zm-1 0H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h9z"/>
        </svg></i>
    </div>

    <div class="sidebar" id="sidebar">
        <div class="sidebar-menu">
            <button class="sidebar-btn" onclick="window.location.href='/'">
                <i class="fas fa-home"></i> Home
            </button>
            <button class="sidebar-btn" onclick="window.location.href='/aboutus'">
                <i class="bi bi-people-fill"></i> About Us
            </button>
            <button class="sidebar-btn" onclick="window.location.href='/cart'">
                <i class="fas fa-shopping-cart"></i> Your Cart
            </button>
        </div>
    </div>

    
    <div class="overlay" id="overlay"></div>
    <header class="navbar">
        <div class="logo">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="wheat" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M.5 6a.5.5 0 0 0-.488.608l1.652 7.434A2.5 2.5 0 0 0 4.104 16h5.792a2.5 2.5 0 0 0 2.44-1.958l.131-.59a3 3 0 0 0 1.3-5.854l.221-.99A.5.5 0 0 0 13.5 6zM13 12.5a2 2 0 0 1-.316-.025l.867-3.898A2.001 2.001 0 0 1 13 12.5M2.64 13.825 1.123 7h11.754l-1.517 6.825A1.5 1.5 0 0 1 9.896 15H4.104a1.5 1.5 0 0 1-1.464-1.175"/>
                <path d="m4.4.8-.003.004-.014.019a4 4 0 0 0-.204.31 2 2 0 0 0-.141.267c-.026.06-.034.092-.037.103v.004a.6.6 0 0 0 .091.248c.075.133.178.272.308.445l.01.012c.118.158.26.347.37.543.112.2.22.455.22.745 0 .188-.065.368-.119.494a3 3 0 0 1-.202.388 5 5 0 0 1-.253.382l-.018.025-.005.008-.002.002A.5.5 0 0 1 3.6 4.2l.003-.004.014-.019a4 4 0 0 0 .204-.31 2 2 0 0 0 .141-.267c.026-.06.034-.092.037-.103a.6.6 0 0 0-.09-.252A4 4 0 0 0 3.6 2.8l-.01-.012a5 5 0 0 1-.37-.543A1.53 1.53 0 0 1 3 1.5c0-.188.065-.368.119-.494.059-.138.134-.274.202-.388a6 6 0 0 1 .253-.382l.025-.035A.5.5 0 0 1 4.4.8m3 0-.003.004-.014.019a4 4 0 0 0-.204.31 2 2 0 0 0-.141.267c-.026.06-.034.092-.037.103v.004a.6.6 0 0 0 .091.248c.075.133.178.272.308.445l.01.012c.118.158.26.347.37.543.112.2.22.455.22.745 0 .188-.065.368-.119.494a3 3 0 0 1-.202.388 5 5 0 0 1-.253.382l-.018.025-.005.008-.002.002A.5.5 0 0 1 6.6 4.2l.003-.004.014-.019a4 4 0 0 0 .204-.31 2 2 0 0 0 .141-.267c.026-.06.034-.092.037-.103a.6.6 0 0 0-.09-.252A4 4 0 0 0 6.6 2.8l-.01-.012a5 5 0 0 1-.37-.543A1.53 1.53 0 0 1 6 1.5c0-.188.065-.368.119-.494.059-.138.134-.274.202-.388a6 6 0 0 1 .253-.382l.025-.035A.5.5 0 0 1 7.4.8m3 0-.003.004-.014.019a4 4 0 0 0-.204.31 2 2 0 0 0-.141.267c-.026.06-.034.092-.037.103v.004a.6.6 0 0 0 .091.248c.075.133.178.272.308.445l.01.012c.118.158.26.347.37.543.112.2.22.455.22.745 0 .188-.065.368-.119.494a3 3 0 0 1-.202.388 5 5 0 0 1-.252.382l-.019.025-.005.008-.002.002A.5.5 0 0 1 9.6 4.2l.003-.004.014-.019a4 4 0 0 0 .204-.31 2 2 0 0 0 .141-.267c.026-.06.034-.092.037-.103a.6.6 0 0 0-.09-.252A4 4 0 0 0 9.6 2.8l-.01-.012a5 5 0 0 1-.37-.543A1.53 1.53 0 0 1 9 1.5c0-.188.065-.368.119-.494.059-.138.134-.274.202-.388a6 6 0 0 1 .253-.382l.025-.035A.5.5 0 0 1 10.4.8"/>
            </svg>
            <h1>Coffee House</h1>
        </div>
        <button class="show-cart-btn" id="show-cart-btn">
            Show Cart
            <span class="cart-count" style="display: none;">0</span>
        </button>
    </header>
    <nav class="category-nav">
        <div class="category-buttons">
            <button onclick="scrollToCategory('cold-coffee')">Cold Coffee</button>
            <button onclick="scrollToCategory('hot-drinks')">Hot Drinks</button>
            <button onclick="scrollToCategory('smoothies')">Smoothies</button>
            <button onclick="scrollToCategory('cold-drinks')">Cold Drinks</button>
            <button onclick="scrollToCategory('breakfast')">Breakfast</button>
            <button onclick="scrollToCategory('dessert')">Dessert</button>
        </div>
    </nav>

    <div class="products-page">
        <h1>Our Menu</h1>
        <div class="products-container">
            <% categories.forEach(category => { %>
                <h3 id="<%= category.toLowerCase().replace(/\s+/g, '-') %>" class="category-heading"><%= category %></h3>
                <% products.filter(p => p.category === category).forEach(product => { %>
                    <div class="product" data-id="<%= product._id %>">
                        <img src="/images/project-images/<%= product.name.toLowerCase().replace(/\s+/g, '-') %>.jpg" alt="<%= product.name %>">
                <div class="product-details">
                            <h2><%= product.name %></h2>
                            <p><%= product.description || 'Delicious ' + product.name %></p>
                            <p class="price">LE <%= product.price.toFixed(2) %></p>
                    <button>Add to Cart</button>
                </div>
            </div>
                <% }); %>
            <% }); %>
        </div>
    </div>

    <!-- Load scripts at the end of body -->
    <script>
        const API_BASE_URL = 'http://localhost:3000/api';

        async function checkAuth() {
            const token = localStorage.getItem('token');
            const user = JSON.parse(localStorage.getItem('user') || 'null');
            
            if (!token || !user) {
                Swal.fire({
                    icon: 'error',
                    title: 'Access Denied',
                    text: 'Please log in to access this page'
                }).then(() => {
                    window.location.href = '/login';
                });
                return false;
            }

            try {
                const response = await fetch(`${API_BASE_URL}/users/verify`, {
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                });

                if (!response.ok) {
                    throw new Error('Invalid token');
                }

                return true;
            } catch (error) {
                console.error('Auth verification failed:', error);
                localStorage.removeItem('token');
                localStorage.removeItem('user');
                Swal.fire({
                    icon: 'error',
                    title: 'Session Expired',
                    text: 'Please log in again'
                }).then(() => {
                    window.location.href = '/login';
                });
                return false;
            }
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', async () => {
            if (!await checkAuth()) return;
            
            // Load menu items
            try {
                const response = await fetch(`${API_BASE_URL}/products`, {
                    headers: {
                        'Authorization': `Bearer ${localStorage.getItem('token')}`
                    }
                });

                if (!response.ok) {
                    throw new Error('Failed to fetch menu items');
                }

                const products = await response.json();
                // Handle menu display logic here
            } catch (error) {
                console.error('Error loading menu:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to load menu items'
                });
            }
        });

        // Check authentication and handle access
        document.addEventListener('DOMContentLoaded', async () => {
            const isAuthorized = await checkAuth();
            if (!isAuthorized) return;

            // Initialize menu functionality
            const menuToggle = document.getElementById('menuToggle');
            const sidebar = document.getElementById('sidebar');
            const overlay = document.getElementById('overlay');
            const showCartBtn = document.getElementById('show-cart-btn');
            const cartCount = document.querySelector('.cart-count');

            if (menuToggle && sidebar && overlay) {
                menuToggle.addEventListener('click', () => {
                    sidebar.classList.toggle('active');
                    overlay.style.display = sidebar.classList.contains('active') ? 'block' : 'none';
                    document.body.classList.toggle('sidebar-open');
                });

                overlay.addEventListener('click', () => {
                    sidebar.classList.remove('active');
                    overlay.style.display = 'none';
                    document.body.classList.remove('sidebar-open');
                });
            }

            if (showCartBtn) {
                showCartBtn.addEventListener('click', async () => {
                    const isAuthorized = await checkAuth();
                    if (isAuthorized) {
                        window.location.href = '/cart';
                    }
                });
            }

            // Add to cart functionality
            document.querySelectorAll('.product button').forEach(button => {
                button.addEventListener('click', async function() {
                    const productDiv = this.closest('.product');
                    const productId = productDiv.dataset.id;
                    const productName = productDiv.querySelector('h2').textContent;
                    const productPrice = parseFloat(productDiv.querySelector('.price').textContent.replace('LE ', ''));

                    try {
                        const response = await fetch('http://localhost:3000/api/cart/add', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'Authorization': `Bearer ${localStorage.getItem('token')}`
                            },
                            body: JSON.stringify({
                                productId,
                                quantity: 1,
                                name: productName,
                                price: productPrice
                            })
                        });

                        if (!response.ok) {
                            throw new Error('Failed to add item to cart');
                        }

                        // Show success message
                        Swal.fire({
                            title: 'Success!',
                            text: 'Item added to cart',
                            icon: 'success',
                            timer: 1500,
                            showConfirmButton: false,
                            position: 'top-end',
                            toast: true
                        });

                        // Update cart count
                        const cartData = await response.json();
                        if (cartCount) {
                            cartCount.textContent = cartData.items.length;
                            cartCount.style.display = 'inline-block';
                        }
                    } catch (error) {
                        console.error('Error adding item to cart:', error);
                        Swal.fire({
                            title: 'Error',
                            text: 'Failed to add item to cart. Please try again.',
                            icon: 'error',
                            position: 'top-end',
                            toast: true,
                            timer: 3000
                        });
                    }
                });
            });
        });

        // Category scroll functionality
        function scrollToCategory(categoryId) {
            const element = document.getElementById(categoryId);
            if (element) {
                const headerHeight = document.querySelector('.navbar')?.offsetHeight || 0;
                const categoryNavHeight = document.querySelector('.category-nav')?.offsetHeight || 0;
                const offset = headerHeight + categoryNavHeight;
                
                const elementPosition = element.getBoundingClientRect().top;
                const offsetPosition = elementPosition + window.pageYOffset - offset;

                window.scrollTo({
                    top: offsetPosition,
                    behavior: 'smooth'
                });
            }
        }
    </script>
    <script src="/js/boudz.js"></script>
</body>
</html>
